theory T_feedback

use import rvs_matrix.Matrix
use import int.Int

function feedback_A_Output1 int : matrix
function feedback_Ax_Output1 int : matrix
function feedback_AxplusBu_Output1 int : matrix
function feedback_B_Output1 int : matrix
function feedback_Bu_Output1 int : matrix
function feedback_K_Output1 int : matrix
function feedback_Subsystem_A_Output1 int : matrix
function feedback_Subsystem_B_Output1 int : matrix
function feedback_Subsystem_K_Output1 int : matrix
function feedback_Subsystem_x_Output1 int : matrix
function feedback_Subsystem_x_next_Output1 int : matrix
function feedback_Subsystem_AplusBK_Output1 int : matrix
function feedback_Subsystem_AplusBKx_Output1 int : matrix
function feedback_Subsystem_AplusBKx1_Output1 int : matrix
function feedback_Subsystem_BK_Output1 int : matrix
function feedback_Subsystem_x0_Output1 int : matrix
function feedback_Subsystem_x1_Output1 int : matrix
function feedback_uEqKx_Output1 int : matrix
function feedback_x_Output1 int : matrix
function feedback_x0_Output1 int : matrix

namespace NS_feedback_A
  clone rvs_simulink.T_Constant with function out1 = feedback_A_Output1
end

namespace NS_feedback_Ax
  clone rvs_simulink.T_rvsMult with function in1 = feedback_A_Output1, function in2 = feedback_x_Output1, function out1 = feedback_Ax_Output1
end

namespace NS_feedback_AxplusBu
  clone rvs_simulink.T_rvsAdd with function in1 = feedback_Ax_Output1, function in2 = feedback_Bu_Output1, function out1 = feedback_AxplusBu_Output1
end

namespace NS_feedback_B
  clone rvs_simulink.T_Constant with function out1 = feedback_B_Output1
end

namespace NS_feedback_Bu
  clone rvs_simulink.T_rvsMult with function in1 = feedback_B_Output1, function in2 = feedback_uEqKx_Output1, function out1 = feedback_Bu_Output1
end

namespace NS_feedback_K
  clone rvs_simulink.T_Constant with function out1 = feedback_K_Output1
end

namespace NS_feedback_Subsystem_AplusBK
  clone rvs_simulink.T_rvsAdd with function in1 = feedback_Subsystem_BK_Output1, function in2 = feedback_A_Output1, function out1 = feedback_Subsystem_AplusBK_Output1
end

namespace NS_feedback_Subsystem_AplusBKx
  clone rvs_simulink.T_rvsMult with function in1 = feedback_Subsystem_AplusBK_Output1, function in2 = feedback_x_Output1, function out1 = feedback_Subsystem_AplusBKx_Output1
end

namespace NS_feedback_Subsystem_AplusBKx1
  clone rvs_simulink.T_rvsMult with function in1 = feedback_Subsystem_AplusBK_Output1, function in2 = feedback_Subsystem_x1_Output1, function out1 = feedback_Subsystem_AplusBKx1_Output1
end

namespace NS_feedback_Subsystem_BK
  clone rvs_simulink.T_rvsMult with function in1 = feedback_B_Output1, function in2 = feedback_K_Output1, function out1 = feedback_Subsystem_BK_Output1
end

namespace NS_feedback_Subsystem_x0
  clone rvs_simulink.T_Constant with function out1 = feedback_Subsystem_x0_Output1
end

namespace NS_feedback_Subsystem_x1
  clone rvs_simulink.T_rvsDelay with function in1 = feedback_x_Output1, function in2 = feedback_Subsystem_x0_Output1, function out1 = feedback_Subsystem_x1_Output1
end

namespace NS_feedback_uEqKx
  clone rvs_simulink.T_rvsMult with function in1 = feedback_K_Output1, function in2 = feedback_x_Output1, function out1 = feedback_uEqKx_Output1
end

namespace NS_feedback_x
  clone rvs_simulink.T_rvsDelay with function in1 = feedback_AxplusBu_Output1, function in2 = feedback_x0_Output1, function out1 = feedback_x_Output1
end

namespace NS_feedback_x0
  clone rvs_simulink.T_Constant with function out1 = feedback_x0_Output1
end

namespace NS_feedback_Subsystem_equ
  goal G_feedback_Subsystem_equ: forall k: int.  feedback_AxplusBu_Output1 k =  feedback_Subsystem_AplusBKx_Output1 k
end

namespace NS_feedback_Subsystem_equ1
  goal G_feedback_Subsystem_equ1: forall k: int.  feedback_Subsystem_AplusBKx1_Output1 k =  feedback_x_Output1 k
end

namespace NS_feedback_Subsystem_rvsConstant
  goal G_feedback_Subsystem_rvsConstant: forall k: int.  feedback_Subsystem_AplusBK_Output1 k =  feedback_Subsystem_AplusBK_Output1 (k-1)
end

end
