theory T_mult2

use import rvs_matrix.Matrix
use import int.Int

function mult2_A_Output1 int : matrix
function mult2_AB_Output1 int : matrix
function mult2_ABplusAC_Output1 int : matrix
function mult2_AC_Output1 int : matrix
function mult2_ACplusBC_Output1 int : matrix
function mult2_AplusB_Output1 int : matrix
function mult2_AplusBtimesC_Output1 int : matrix
function mult2_AtimesBplusC_Output1 int : matrix
function mult2_B_Output1 int : matrix
function mult2_BC_Output1 int : matrix
function mult2_BplusC_Output1 int : matrix
function mult2_C_Output1 int : matrix

namespace NS_mult2_A
  clone rvs_simulink.T_Constant with function out1 = mult2_A_Output1
end

namespace NS_mult2_AB
  clone rvs_simulink.T_rvsMult with function in1 = mult2_A_Output1, function in2 = mult2_B_Output1, function out1 = mult2_AB_Output1
end

namespace NS_mult2_ABplusAC
  clone rvs_simulink.T_rvsAdd with function in1 = mult2_AB_Output1, function in2 = mult2_AC_Output1, function out1 = mult2_ABplusAC_Output1
end

namespace NS_mult2_AC
  clone rvs_simulink.T_rvsMult with function in1 = mult2_A_Output1, function in2 = mult2_C_Output1, function out1 = mult2_AC_Output1
end

namespace NS_mult2_ACplusBC
  clone rvs_simulink.T_rvsAdd with function in1 = mult2_AC_Output1, function in2 = mult2_BC_Output1, function out1 = mult2_ACplusBC_Output1
end

namespace NS_mult2_AplusB
  clone rvs_simulink.T_rvsAdd with function in1 = mult2_B_Output1, function in2 = mult2_A_Output1, function out1 = mult2_AplusB_Output1
end

namespace NS_mult2_AplusBtimesC
  clone rvs_simulink.T_rvsMult with function in1 = mult2_AplusB_Output1, function in2 = mult2_C_Output1, function out1 = mult2_AplusBtimesC_Output1
end

namespace NS_mult2_AtimesBplusC
  clone rvs_simulink.T_rvsMult with function in1 = mult2_A_Output1, function in2 = mult2_BplusC_Output1, function out1 = mult2_AtimesBplusC_Output1
end

namespace NS_mult2_B
  clone rvs_simulink.T_Constant with function out1 = mult2_B_Output1
end

namespace NS_mult2_BC
  clone rvs_simulink.T_rvsMult with function in1 = mult2_B_Output1, function in2 = mult2_C_Output1, function out1 = mult2_BC_Output1
end

namespace NS_mult2_BplusC
  clone rvs_simulink.T_rvsAdd with function in1 = mult2_B_Output1, function in2 = mult2_C_Output1, function out1 = mult2_BplusC_Output1
end

namespace NS_mult2_C
  clone rvs_simulink.T_Constant with function out1 = mult2_C_Output1
end

namespace NS_mult2_Ldistrib
  goal G_mult2_Ldistrib: forall k: int.  mult2_ABplusAC_Output1 k =  mult2_AtimesBplusC_Output1 k
end

namespace NS_mult2_Rdistrib
  goal G_mult2_Rdistrib: forall k: int.  mult2_ACplusBC_Output1 k =  mult2_AplusBtimesC_Output1 k
end

end
