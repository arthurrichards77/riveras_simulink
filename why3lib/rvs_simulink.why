(* supported mask types from rvs library *)

theory T_rvsAdd
 use import rvs_matrix.Matrix
 use import rvs_matrix.MatrixAdd

 function in1 int: matrix
 function in2 int: matrix
 function out1 int: matrix

 axiom A1: forall k:int. out1 k = mat_add (in1 k) (in2 k)
end

theory T_rvsSubtract
 use import rvs_matrix.Matrix
 use import rvs_matrix.MatrixSubtract

 function in1 int: matrix
 function in2 int: matrix
 function out1 int: matrix

 axiom A1: forall k:int. out1 k = mat_subtract (in1 k) (in2 k)
end

theory T_rvsMult
 use import rvs_matrix.Matrix
 use import rvs_matrix.MatrixMultiply

 function in1 int: matrix
 function in2 int: matrix
 function out1 int: matrix

 axiom mult_def: forall k:int. out1 k = mat_mult (in1 k) (in2 k)
end

theory T_rvsDelay
 use import rvs_matrix.Matrix
 use import int.Int

 function in1 int: matrix
 function in2 int: matrix
 function out1 int: matrix

 axiom delay_def: forall k:int. out1 (k+1) = in1 k
end

(* supported block types from general simulink *)

theory T_Constant
 use import rvs_matrix.Matrix
 use import int.Int

 function out1 int: matrix

 axiom constant_def: forall k1 k2 : int. out1 k1 = out1 k2
 lemma constant_lemma: forall k : int. out1 k = out1 (k-1)
 
end

